{"version":3,"sources":["../../src/buttons/radio.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,UAAA,EAAY,QAAA,EAAU,KAAA,EAAO,SAAA,EAAW,UAAA,EAAsB,MAAM,eAAA,CAAgB;AACvG,OAAO,EAAuB,iBAAA,EAAkB,MAAM,gBAAA,CAAiB;AAEvE,IAAM,wBAAA,GAA2B;IAC/B,OAAO,EAAE,iBAAA;IACT,WAAW,EAAE,UAAA,CAAW,cAAM,OAAA,aAAA,EAAA,CAAA,CAAc;IAC5C,KAAK,EAAE,IAAA;CACR,CAAC;AAEF;;;GAGG;AAEH;IAAA;QACU,YAAO,GAAkB,IAAI,GAAG,EAAY,CAAC;QAC7C,WAAM,GAAG,IAAI,CAAC;QAMtB,aAAQ,GAAG,UAAC,CAAM,IAAM,CAAC,CAAC;QAC1B,cAAS,GAAG,cAAO,CAAC,CAAC;IAuCvB,CAAC;IA3CC,sBAAI,mCAAQ;aAAZ,cAAiB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACzC,UAAa,UAAmB,IAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;;;OAD/B;IAMzC,qCAAa,GAAb,UAAc,KAAe;QAC3B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IAED,0CAAkB,GAAlB,cAAuB,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;IAEnD,gCAAQ,GAAR,UAAS,KAAe,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAEtD,wCAAgB,GAAhB,UAAiB,EAAuB,IAAU,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC;IAEvE,yCAAiB,GAAjB,UAAkB,EAAa,IAAU,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC,CAAC;IAE/D,wCAAgB,GAAhB,UAAiB,UAAmB;QAClC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;QAC5B,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED,kCAAU,GAAV,UAAW,KAAe,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAE3D,kCAAU,GAAV,UAAW,KAAK;QACd,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAEO,0CAAkB,GAA1B;QAAA,iBAAiG;QAAlE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,KAAK,IAAK,OAAA,KAAK,CAAC,WAAW,CAAC,KAAI,CAAC,MAAM,CAAC,EAA9B,CAA8B,CAAC,CAAC;IAAC,CAAC;IACzF,6CAAqB,GAA7B,cAAkC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,KAAK,IAAK,OAAA,KAAK,CAAC,cAAc,EAAE,EAAtB,CAAsB,CAAC,CAAC,CAAC,CAAC;IAW9F,oBAAC;AAAD,CAhDA,AAgDC;;AAVM,wBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,iBAAiB;gBAC3B,IAAI,EAAE,EAAC,aAAa,EAAE,SAAS,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,OAAO,EAAC;gBACvE,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,4BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAKF;IACE,wBAAoB,SAAoB,EAAU,MAAkB;QAAhD,cAAS,GAAT,SAAS,CAAW;QAAU,WAAM,GAAN,MAAM,CAAY;IAAG,CAAC;IAExE,sBAAI,kCAAM;aAAV,UAAW,QAAiB;YAC1B,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;YAC/D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;YAClE,CAAC;QACH,CAAC;;;OAAA;IAED,sBAAI,oCAAQ;aAAZ,UAAa,UAAmB;YAC9B,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACf,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;YACjE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;YACpE,CAAC;QACH,CAAC;;;OAAA;IAED,sBAAI,mCAAO;aAAX,UAAY,SAAkB;YAC5B,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACd,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;YAC9D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;YACjE,CAAC;QACH,CAAC;;;OAAA;IASH,qBAAC;AAAD,CAlCA,AAkCC;;AARM,yBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,WAAW,EAAC,EAAG,EAAE;CACrD,CAAC;AACF,kBAAkB;AACX,6BAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,SAAS,GAAG;IACnB,EAAC,IAAI,EAAE,UAAU,GAAG;CACnB,EAH6F,CAG7F,CAAC;AAIF;;GAEG;AAEH;IAgDE,kBACa,MAAqB,EAAW,MAAsB,EACvD,SAAoB,EAAU,QAAoB;QADjD,WAAM,GAAN,MAAM,CAAe;QAAW,WAAM,GAAN,MAAM,CAAgB;QACvD,cAAS,GAAT,SAAS,CAAW;QAAU,aAAQ,GAAR,QAAQ,CAAY;QA/CtD,WAAM,GAAQ,IAAI,CAAC;QAgDzB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC;IACH,CAAC;IA7CD,sBAAI,2BAAK;aAiCT,cAAc,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QArCnC;;UAEE;aAEF,UAAU,KAAU;YAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAM,WAAW,GAAG,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC;YAClD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;YAE9E,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAChB,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC;YACnC,CAAC;QACH,CAAC;;;OAAA;IAMD,sBAAI,6BAAO;aAqBX,cAAgB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QAzBvC;;WAEG;aAEH,UAAY,KAAc;YACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;QACrF,CAAC;;;OAAA;IAMD,sBAAI,8BAAQ;aAeZ,cAAiB,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAnBlF;;WAEG;aAEH,UAAa,UAAmB;YAC9B,IAAI,CAAC,SAAS,GAAG,UAAU,KAAK,KAAK,CAAC;YACtC,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAI,6BAAO;aAAX,UAAY,SAAkB;YAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAChB,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC;YAClC,CAAC;QACH,CAAC;;;OAAA;IAgBD,8BAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC;IACH,CAAC;IAED,2BAAQ,GAAR;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC;IACH,CAAC;IAED,8BAAW,GAAX,UAAY,KAAK;QACf,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;IACrC,CAAC;IAED,iCAAc,GAAd;QACE,IAAI,QAAQ,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC;QACvE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAClC,CAAC;IACH,CAAC;IAyBH,eAAC;AAAD,CAvGA,AAuGC;;AAxBM,mBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,mBAAmB;gBAC7B,IAAI,EAAE;oBACJ,WAAW,EAAE,SAAS;oBACtB,YAAY,EAAE,UAAU;oBACxB,UAAU,EAAE,YAAY;oBACxB,SAAS,EAAE,gBAAgB;oBAC3B,QAAQ,EAAE,iBAAiB;iBAC5B;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,uBAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,aAAa,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAG,EAAC;IACzD,EAAC,IAAI,EAAE,cAAc,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAG,EAAC;IAC1D,EAAC,IAAI,EAAE,SAAS,GAAG;IACnB,EAAC,IAAI,EAAE,UAAU,GAAG;CACnB,EAL6F,CAK7F,CAAC;AACK,uBAAc,GAA2C;IAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,OAAO,EAAG,EAAE,EAAE;IAC9C,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,SAAS,EAAG,EAAE,EAAE;IAClD,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,UAAU,EAAG,EAAE,EAAE;CACnD,CAAC","file":"radio.js","sourceRoot":"","sourcesContent":["import {Directive, forwardRef, Optional, Input, Renderer2, ElementRef, OnDestroy} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nconst NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRadioGroup),\n  multi: true\n};\n\n/**\n * Easily create Bootstrap-style radio buttons. A value of a selected button is bound to a variable\n * specified via ngModel.\n */\n\nexport class NgbRadioGroup implements ControlValueAccessor {\n  private _radios: Set<NgbRadio> = new Set<NgbRadio>();\n  private _value = null;\n  private _disabled: boolean;\n\n  get disabled() { return this._disabled; }\n  set disabled(isDisabled: boolean) { this.setDisabledState(isDisabled); }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  onRadioChange(radio: NgbRadio) {\n    this.writeValue(radio.value);\n    this.onChange(radio.value);\n  }\n\n  onRadioValueUpdate() { this._updateRadiosValue(); }\n\n  register(radio: NgbRadio) { this._radios.add(radio); }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateRadiosDisabled();\n  }\n\n  unregister(radio: NgbRadio) { this._radios.delete(radio); }\n\n  writeValue(value) {\n    this._value = value;\n    this._updateRadiosValue();\n  }\n\n  private _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n  private _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngbRadioGroup]',\n  host: {'data-toggle': 'buttons', 'class': 'btn-group', 'role': 'group'},\n  providers: [NGB_RADIO_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\n\nexport class NgbActiveLabel {\n  constructor(private _renderer: Renderer2, private _elRef: ElementRef) {}\n\n  set active(isActive: boolean) {\n    if (isActive) {\n      this._renderer.addClass(this._elRef.nativeElement, 'active');\n    } else {\n      this._renderer.removeClass(this._elRef.nativeElement, 'active');\n    }\n  }\n\n  set disabled(isDisabled: boolean) {\n    if (isDisabled) {\n      this._renderer.addClass(this._elRef.nativeElement, 'disabled');\n    } else {\n      this._renderer.removeClass(this._elRef.nativeElement, 'disabled');\n    }\n  }\n\n  set focused(isFocused: boolean) {\n    if (isFocused) {\n      this._renderer.addClass(this._elRef.nativeElement, 'focus');\n    } else {\n      this._renderer.removeClass(this._elRef.nativeElement, 'focus');\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'label.btn'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n];\n}\n\n\n/**\n * Marks an input of type \"radio\" as part of the NgbRadioGroup.\n */\n\nexport class NgbRadio implements OnDestroy {\n  private _checked: boolean;\n  private _disabled: boolean;\n  private _value: any = null;\n\n  /**\n   * You can specify model value of a given radio by binding to the value property.\n  */\n  \n  set value(value: any) {\n    this._value = value;\n    const stringValue = value ? value.toString() : '';\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n\n    if (this._group) {\n      this._group.onRadioValueUpdate();\n    }\n  }\n\n  /**\n   * A flag indicating if a given radio button is checked.\n   */\n  \n  set checked(value: boolean) {\n    this._checked = this._element.nativeElement.hasAttribute('checked') ? true : value;\n  }\n\n  /**\n   * A flag indicating if a given radio button is disabled.\n   */\n  \n  set disabled(isDisabled: boolean) {\n    this._disabled = isDisabled !== false;\n    this.updateDisabled();\n  }\n\n  set focused(isFocused: boolean) {\n    if (this._label) {\n      this._label.focused = isFocused;\n    }\n  }\n\n  get value() { return this._value; }\n\n  get checked() { return this._checked; }\n\n  get disabled() { return (this._group && this._group.disabled) || this._disabled; }\n\n  constructor(\n       private _group: NgbRadioGroup,  private _label: NgbActiveLabel,\n      private _renderer: Renderer2, private _element: ElementRef) {\n    if (this._group) {\n      this._group.register(this);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._group) {\n      this._group.unregister(this);\n    }\n  }\n\n  onChange() {\n    if (this._group) {\n      this._group.onRadioChange(this);\n    }\n  }\n\n  updateValue(value) {\n    this._checked = (this.value === value && value !== null);\n    this._label.active = this._checked;\n  }\n\n  updateDisabled() {\n    let disabled = (this._group && this._group.disabled) || this._disabled;\n    if (this._label) {\n      this._label.disabled = disabled;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'input[type=radio]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '(change)': 'onChange()',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbRadioGroup, decorators: [{ type: Optional }, ]},\n{type: NgbActiveLabel, decorators: [{ type: Optional }, ]},\n{type: Renderer2, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input, args: ['value', ] },],\n'checked': [{ type: Input, args: ['checked', ] },],\n'disabled': [{ type: Input, args: ['disabled', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}